--[[

 wcwidth -- v0.5.0 public domain Lua wcwidth implementation
 no warranty implied; use at your own risk

 Mainly based on the C wcwidth library at
 https://github.com/mattn/wcwidth.c/blob/master/wcwidth.c
 by mattn(mattn.jp@gmail.com)

 author: Ilya Kolbin (iskolbin@gmail.com)
 url: github.com/iskolbin/lwcwidth

 COMPATIBILITY

 Lua 5.1, 5.2, 5.3, LuaJIT 1, 2

 LICENSE

 This software is dual-licensed to the public domain and under the following
 license: you are granted a perpetual, irrevocable license to copy, modify,
 publish, and distribute this file as you see fit.

--]]

local NONSPACING = {}
for _, interval in ipairs{
	{ 0x0300, 0x034e }, { 0x0360, 0x0362 }, { 0x0483, 0x0486 }, { 0x0488, 0x0489 },
	{ 0x0591, 0x05a1 }, { 0x05a3, 0x05b9 }, { 0x05bb, 0x05bd }, { 0x05bf, 0x05bf },
	{ 0x05c1, 0x05c2 }, { 0x05c4, 0x05c4 }, { 0x064b, 0x0655 }, { 0x0670, 0x0670 },
	{ 0x06d6, 0x06e4 }, { 0x06e7, 0x06e8 }, { 0x06ea, 0x06ed }, { 0x070f, 0x070f },
	{ 0x0711, 0x0711 }, { 0x0730, 0x074a }, { 0x07a6, 0x07b0 }, { 0x0901, 0x0902 },
	{ 0x093c, 0x093c }, { 0x0941, 0x0948 }, { 0x094d, 0x094d }, { 0x0951, 0x0954 },
	{ 0x0962, 0x0963 }, { 0x0981, 0x0981 }, { 0x09bc, 0x09bc }, { 0x09c1, 0x09c4 },
	{ 0x09cd, 0x09cd }, { 0x09e2, 0x09e3 }, { 0x0a02, 0x0a02 }, { 0x0a3c, 0x0a3c },
	{ 0x0a41, 0x0a42 }, { 0x0a47, 0x0a48 }, { 0x0a4b, 0x0a4d }, { 0x0a70, 0x0a71 },
	{ 0x0a81, 0x0a82 }, { 0x0abc, 0x0abc }, { 0x0ac1, 0x0ac5 }, { 0x0ac7, 0x0ac8 },
	{ 0x0acd, 0x0acd }, { 0x0b01, 0x0b01 }, { 0x0b3c, 0x0b3c }, { 0x0b3f, 0x0b3f },
	{ 0x0b41, 0x0b43 }, { 0x0b4d, 0x0b4d }, { 0x0b56, 0x0b56 }, { 0x0b82, 0x0b82 },
	{ 0x0bc0, 0x0bc0 }, { 0x0bcd, 0x0bcd }, { 0x0c3e, 0x0c40 }, { 0x0c46, 0x0c48 },
	{ 0x0c4a, 0x0c4d }, { 0x0c55, 0x0c56 }, { 0x0cbf, 0x0cbf }, { 0x0cc6, 0x0cc6 },
	{ 0x0ccc, 0x0ccd }, { 0x0d41, 0x0d43 }, { 0x0d4d, 0x0d4d }, { 0x0dca, 0x0dca },
	{ 0x0dd2, 0x0dd4 }, { 0x0dd6, 0x0dd6 }, { 0x0e31, 0x0e31 }, { 0x0e34, 0x0e3a },
	{ 0x0e47, 0x0e4e }, { 0x0eb1, 0x0eb1 }, { 0x0eb4, 0x0eb9 }, { 0x0ebb, 0x0ebc },
	{ 0x0ec8, 0x0ecd }, { 0x0f18, 0x0f19 }, { 0x0f35, 0x0f35 }, { 0x0f37, 0x0f37 },
	{ 0x0f39, 0x0f39 }, { 0x0f71, 0x0f7e }, { 0x0f80, 0x0f84 }, { 0x0f86, 0x0f87 },
	{ 0x0f90, 0x0f97 }, { 0x0f99, 0x0fbc }, { 0x0fc6, 0x0fc6 }, { 0x102d, 0x1030 },
	{ 0x1032, 0x1032 }, { 0x1036, 0x1037 }, { 0x1039, 0x1039 }, { 0x1058, 0x1059 },
	{ 0x1160, 0x11ff }, { 0x17b7, 0x17bd }, { 0x17c6, 0x17c6 }, { 0x17c9, 0x17d3 },
	{ 0x180b, 0x180e }, { 0x18a9, 0x18a9 }, { 0x200b, 0x200f }, { 0x202a, 0x202e },
	{ 0x206a, 0x206f }, { 0x20d0, 0x20e3 }, { 0x302a, 0x302f }, { 0x3099, 0x309a },
	{ 0xfb1e, 0xfb1e }, { 0xfe20, 0xfe23 }, { 0xfeff, 0xfeff }, { 0xfff9, 0xfffb }} do
	for j = interval[1], interval[2] do
		NONSPACING[j] = 0
	end
end

local EXCEPTIONS = {
	[0x300a] = true, [0x300b] = true, [0x301a] = true,
	[0x301b] = true, [0x303f] = true,
}

return function( ucs )
	if ucs == 0 then
		return 0
	end
	if ucs < 32 or (ucs >= 0x7f and ucs < 0xa0) then
		return -1
	end
	return NONSPACING[ucs] or (ucs >= 0x1100 and
		(ucs <= 0x115f or
			(ucs >= 0x2e80 and ucs <= 0xa4cf and not EXCEPTIONS[ucs]) or
			(ucs >= 0xac00 and ucs <= 0xd7a3) or
			(ucs >= 0xf900 and ucs <= 0xfaff) or
			(ucs >= 0xfe30 and ucs <= 0xfe6f) or
			(ucs >= 0xff00 and ucs <= 0xff5f) or
			(ucs >= 0xffe0 and ucs <= 0xffe6)
	)) and 2 or 1
end
